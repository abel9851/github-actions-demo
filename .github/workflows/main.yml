name: CI
on: push

jobs:
  test: # 이 job만 실행하려면 act -j 명령어를 사용하면 된다.
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '18'
    - name: Install dependencies
      run: npm install
      env:  # npm 패키지 설치 시 필요한 경우
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: Run tests with secrets
      run: npm test
      env:  # 테스트 스크립트에서 접근할 환경변수
        API_KEY: ${{ secrets.API_KEY }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    - name: Check secrets existence
      run: |
        if [ -z "${{ secrets.API_KEY }}" ]; then
          echo "❌ API_KEY is missing"
          exit 1
        else
          echo "✅ API_KEY is set (length: ${#API_KEY} chars)"
        fi
        
        # 값 출력은 보안상 추천하지 않지만, 테스트용으로만 사용할 경우
        # run test
        echo "DB_PASSWORD length: ${#DB_PASSWORD}"
      env:
        API_KEY: ${{ secrets.API_KEY }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    - name: Log DB_PASSWORD debugging
      run: |
        db_password_length=${#DB_PASSWORD}
        echo "DB_PASSWORD length: ${db_password_length}"
        if [ -z "${{ secrets.DB_PASSWORD }}" ]; then
          echo "no db password secret!!!!!"
          exit 1
        fi
      env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

# 터미널의 cwd에 .github/workflows 디렉토리가 존재하지 않는다면 github local actions extension은 인식하지 못한다.
# 즉, private/github-actions-demo/.github/workflows path인 상황에서 터미널의 cwd가 private라면 인식을 하지 못한다.
# 25/02/10에는 Secrets와 같은 옵션을 사용해보도록 하자
